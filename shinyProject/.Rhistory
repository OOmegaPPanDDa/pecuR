print('north cloud is similar with east and island')
}
if(wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'south'))[,2])$p.value > 0.05 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'north'))[,2])$p.value < 0.05 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'east'))[,2])$p.value < 0.05 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'island'))[,2])$p.value < 0.05){
print('centre cloud is similar with south')
}
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'east'))[,2])$p.value
if(wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'east'))[,2],paired = T)$p.value > 0.05 &&
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'island'))[,2],paired = T)$p.value > 0.05 &&
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'centre'))[,2],paired = T)$p.value < 0.05 &&
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'south'))[,2],paired = T)$p.value < 0.05){
print('north cloud is similar with east and island')
}
if(wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'south'))[,2],paired = T)$p.value > 0.05 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'north'))[,2],paired = T)$p.value < 0.05 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'east'))[,2],paired = T)$p.value < 0.05 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'island'))[,2],paired = T)$p.value < 0.05){
print('centre cloud is similar with south')
}
if(wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'east'))[,2],paired = T)$p.value > 0.05 &&
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'island'))[,2],paired = T)$p.value > 0.05 &&
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'centre'))[,2],paired = T)$p.value < 0.05 &&
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'south'))[,2],paired = T)$p.value < 0.05){
print('north cloud is similar with east and island')
}
if(wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'south'))[,2],paired = T)$p.value > 0.05 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'north'))[,2],paired = T)$p.value < 0.05 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'east'))[,2],paired = T)$p.value < 0.05 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'island'))[,2],paired = T)$p.value < 0.05){
print('centre cloud is similar with south')
}
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'east'))[,2],paired = T)
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'island'))[,2],paired = T)$p.value
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'centre'))[,2],paired = T
)
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'south'))[,2],paired = T
)
wilcox.test(north_data - mean(north_data),east_data - mean(east_data),paired = T
)
north_data <- (df %>% filter(code == 'north'))[,2]
east_data <- (df %>% filter(code == 'east'))[,2]
if(wilcox.test(north_data - mean(north_data),east_data - mean(east_data),paired = T)$p.value > 0.05 &&
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'island'))[,2],paired = T)$p.value > 0.05 &&
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'centre'))[,2],paired = T)$p.value < 0.05 &&
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'south'))[,2],paired = T)$p.value < 0.05){
print('north cloud is similar with east and island')
}
if(wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'south'))[,2],paired = T)$p.value > 0.05 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'north'))[,2],paired = T)$p.value < 0.05 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'east'))[,2],paired = T)$p.value < 0.05 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'island'))[,2],paired = T)$p.value < 0.05){
print('centre cloud is similar with south')
}
wilcox.test(north_data - mean(north_data),east_data - mean(east_data),paired = T
)
wilcox.test(north_data - mean(north_data),east_data - mean(east_data),paired = T
)
wilcox.test(north_data - 2,east_data - 2,paired = T
)
if(wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'east'))[,2],paired = T)$p.value > 0.05 &&
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'island'))[,2],paired = T)$p.value > 0.05 &&
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'centre'))[,2],paired = T)$p.value < 0.05 &&
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'south'))[,2],paired = T)$p.value < 0.05){
print('north cloud is similar with east and island')
}
if(wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'south'))[,2],paired = T)$p.value > 0.05 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'north'))[,2],paired = T)$p.value < 0.05 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'east'))[,2],paired = T)$p.value < 0.05 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'island'))[,2],paired = T)$p.value < 0.05){
print('centre cloud is similar with south')
}
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'island'))[,2],paired = T)$p.value < 0.05
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'island'))[,2],paired = T)$p.value
if(wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'east'))[,2],paired = T)$p.value > 0.2 &&
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'island'))[,2],paired = T)$p.value > 0.2 &&
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'centre'))[,2],paired = T)$p.value < 0.2 &&
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'south'))[,2],paired = T)$p.value < 0.2){
print('north cloud is similar with east and island')
}
if(wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'south'))[,2],paired = T)$p.value > 0.2 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'north'))[,2],paired = T)$p.value < 0.2 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'east'))[,2],paired = T)$p.value < 0.2 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'island'))[,2],paired = T)$p.value < 0.2){
print('centre cloud is similar with south')
}
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'east'))[,2],paired = T)$p.value
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'north'))[,2],paired = T)$p.value
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'south'))[,2],paired = T)$p.value
if(wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'east'))[,2],paired = T)$p.value > 0.2 &&
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'island'))[,2],paired = T)$p.value > 0.2 &&
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'centre'))[,2],paired = T)$p.value < 0.2 &&
wilcox.test((df %>% filter(code == 'north'))[,2],(df %>% filter(code == 'south'))[,2],paired = T)$p.value < 0.2){
print('north cloud is similar with east and island')
}
if(wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'south'))[,2],paired = T)$p.value > 0.05 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'north'))[,2],paired = T)$p.value < 0.05 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'east'))[,2],paired = T)$p.value < 0.05 &&
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'island'))[,2],paired = T)$p.value < 0.05){
print('centre cloud is similar with south')
}
df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'island'))[,2],paired = T)$p.value
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'island'))[,2],paired = T)$p.value
wilcox.test((df %>% filter(code == 'centre'))[,2],(df %>% filter(code == 'south'))[,2],paired = T)$p.value
df %>% filter(code == 'centre')
df %>% filter(code == 'island')
ggplot(df %>% filter(code == 'all'), aes(x = month, y = data, group = 1, colour = 'steelblue')) +
geom_line() +
geom_point(size=2, shape=21, fill="white") +
ylim(4,10) +
ggtitle('全台月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
ggplot(df %>% filter(code == 'all'), aes(x = month, y = data, group = 1, colour = 'deepskyblue')) +
geom_line() +
geom_point(size=2, shape=21, fill="white") +
ylim(4,10) +
ggtitle('全台月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
ggplot(df %>% filter(code == 'all'), aes(x = month, y = data, group = 1, colour = 'cyan')) +
geom_line() +
geom_point(size=2, shape=21, fill="white") +
ylim(4,10) +
ggtitle('全台月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
ggplot(df %>% filter(code == 'all'), aes(x = month, y = data, group = 1)) +
geom_line(colour = 'cyan') +
geom_point(size=2, shape=21, fill="white") +
ylim(4,10) +
ggtitle('全台月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
ggplot(df %>% filter(code == 'all'), aes(x = month, y = data, group = 1)) +
geom_line(colour = 'deepskyblue') +
geom_point(size=2, shape=21, fill="white") +
ylim(4,10) +
ggtitle('全台月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
std(c(1,2,2))
sd(c(1,2,2))
?sd
cloud_north
std(cloud_north)
sd(cloud_north)
df %>% filter(code == 'all')
cl <- df %>% filter(code == 'all')
ggplot(cl, aes(x = month, y = data, group = 1)) +
geom_line(colour = 'deepskyblue') +
geom_point(size=2, shape=21, fill="white") +
ylim(4,10) +
ggtitle('全台月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
cl
cloud_north
subset(cloud,area == 'north'
)
apply(cloud[,2:13],1,sd())
apply(cloud[,2:13],2,sd
)
cloud_all <- colMeans(cloud[,2:13])
cloud_all_sd <- apply(cloud[,2:13],2,sd)
cloud_north <- colMeans(subset(cloud,area == 'north')[,2:13])
cloud_centre <- colMeans(subset(cloud,area == 'centre')[,2:13])
cloud_south <- colMeans(subset(cloud,area == 'south')[,2:13])
cloud_east <- colMeans(subset(cloud,area == 'east')[,2:13])
cloud_island <- colMeans(subset(cloud,area == 'island')[,2:13])
cloud_plain <- colMeans(subset(cloud,terrain == 'mountain')[,2:13])
cloud_mountain <- colMeans(subset(cloud,terrain == 'plain')[,2:13])
df <- data.frame(month = as.character(names(cloud_all)), data = as.vector(cloud_all), code = 'all')
df <- rbind(df, data.frame(month = as.character(names(cloud_all)), data = as.vector(cloud_north), code = 'north'))
df <- rbind(df, data.frame(month = as.character(names(cloud_all)), data = as.vector(cloud_centre), code = 'centre'))
df <- rbind(df, data.frame(month = as.character(names(cloud_all)), data = as.vector(cloud_south), code = 'south'))
df <- rbind(df, data.frame(month = as.character(names(cloud_all)), data = as.vector(cloud_east), code = 'east'))
df <- rbind(df, data.frame(month = as.character(names(cloud_all)), data = as.vector(cloud_island), code = 'island'))
df <- rbind(df, data.frame(month = as.character(names(cloud_all)), data = as.vector(cloud_mountain), code = 'mountain'))
df <- rbind(df, data.frame(month = as.character(names(cloud_all)), data = as.vector(cloud_plain), code = 'plain'))
df$month <- factor(df$month, levels = df$month, ordered = T)
head(df)
ggplot(df %>% filter(code == 'all'), aes(x = month, y = data, group = 1)) +
geom_line(colour = 'deepskyblue') +
geom_point(size=2, shape=21, fill="white") +
geom_ribbon(aes(ymin = data - cloud_all_sd, ymax = data + cloud_all_sd), alpha = 0.2) +
ylim(4,10) +
ggtitle('全台月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
cloud_all <- colMeans(cloud[,2:13])
cloud_all_sd <- apply(cloud[,2:13],2,sd)
cloud_north <- colMeans(subset(cloud,area == 'north')[,2:13])
cloud_centre <- colMeans(subset(cloud,area == 'centre')[,2:13])
cloud_south <- colMeans(subset(cloud,area == 'south')[,2:13])
cloud_east <- colMeans(subset(cloud,area == 'east')[,2:13])
cloud_island <- colMeans(subset(cloud,area == 'island')[,2:13])
cloud_plain <- colMeans(subset(cloud,terrain == 'mountain')[,2:13])
cloud_mountain <- colMeans(subset(cloud,terrain == 'plain')[,2:13])
df <- data.frame(month = as.character(names(cloud_all)), data = as.vector(cloud_all), code = 'all')
df <- rbind(df, data.frame(month = as.character(names(cloud_all)), data = as.vector(cloud_north), code = 'north'))
df <- rbind(df, data.frame(month = as.character(names(cloud_all)), data = as.vector(cloud_centre), code = 'centre'))
df <- rbind(df, data.frame(month = as.character(names(cloud_all)), data = as.vector(cloud_south), code = 'south'))
df <- rbind(df, data.frame(month = as.character(names(cloud_all)), data = as.vector(cloud_east), code = 'east'))
df <- rbind(df, data.frame(month = as.character(names(cloud_all)), data = as.vector(cloud_island), code = 'island'))
df <- rbind(df, data.frame(month = as.character(names(cloud_all)), data = as.vector(cloud_mountain), code = 'mountain'))
df <- rbind(df, data.frame(month = as.character(names(cloud_all)), data = as.vector(cloud_plain), code = 'plain'))
df$month <- factor(df$month, levels = df$month, ordered = T)
head(df)
ggplot(df %>% filter(code == 'all'), aes(x = month, y = data, group = 1)) +
geom_line(colour = 'deepskyblue') +
geom_point(size=2, shape=21, fill="white") +
geom_ribbon(aes(ymin = data - cloud_all_sd, ymax = data + cloud_all_sd), alpha = 0.01) +
ylim(4,10) +
ggtitle('全台月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
ggplot(df %>% filter(code == 'all'), aes(x = month, y = data, group = 1)) +
geom_line(colour = 'deepskyblue') +
geom_point(size=2, shape=21, fill="white") +
geom_ribbon(aes(ymin = data - cloud_all_sd, ymax = data + cloud_all_sd), alpha = 0.1) +
ylim(4,10) +
ggtitle('全台月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
ggplot(df %>% filter(code == 'all'), aes(x = month, y = data, group = 1)) +
geom_line(colour = 'deepskyblue') +
geom_point(size=2, shape=21, fill="white") +
geom_ribbon(aes(ymin = data - cloud_all_sd, ymax = data + cloud_all_sd), alpha = 0.05) +
ylim(4,10) +
ggtitle('全台月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
ggplot(df %>% filter(code == 'all'), aes(x = month, y = data, group = 1)) +
geom_line(colour = 'deepskyblue') +
geom_point(size=2, shape=21, fill="white") +
geom_ribbon(aes(ymin = data - cloud_all_sd, ymax = data + cloud_all_sd), alpha = 0.05, colour = 'blue') +
ylim(4,10) +
ggtitle('全台月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
ggplot(df %>% filter(code == 'all'), aes(x = month, y = data, group = 1)) +
geom_line(colour = 'deepskyblue') +
geom_point(size=2, shape=21, fill="white") +
geom_ribbon(aes(ymin = data - cloud_all_sd, ymax = data + cloud_all_sd), alpha = 0.05, fill = 'blue') +
ylim(4,10) +
ggtitle('全台月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
ggplot(df %>% filter(code == 'all'), aes(x = month, y = data, group = 1)) +
geom_line(colour = 'deepskyblue') +
geom_point(size=2, shape=21, fill="white") +
geom_ribbon(aes(ymin = data - cloud_all_sd, ymax = data + cloud_all_sd), alpha = 0.05, fill = 'deepskyblue') +
ylim(4,10) +
ggtitle('全台月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
ggplot(df %>% filter(code == 'all'), aes(x = month, y = data, group = 1)) +
geom_line(colour = 'deepskyblue') +
geom_point(size=2, shape=21, fill="white") +
geom_ribbon(aes(ymin = data - cloud_all_sd, ymax = data + cloud_all_sd), alpha = 0.01, fill = 'deepskyblue') +
ylim(4,10) +
ggtitle('全台月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
ggplot(df %>% filter(code == 'all'), aes(x = month, y = data, group = 1)) +
geom_line(colour = 'deepskyblue') +
geom_point(size=2, shape=21, fill="white") +
geom_ribbon(aes(ymin = data - cloud_all_sd, ymax = data + cloud_all_sd), alpha = 0.1, fill = 'deepskyblue') +
ylim(4,10) +
ggtitle('全台月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
ggplot(df %>% filter(code %in% c('north','east','island')), aes(x = month, y = data, group = code, colour = code)) +
geom_line() +
geom_point(size=2, shape=21, fill="white") +
ylim(4,10) +
ggtitle('台灣北中南東離島月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
ggplot(df %>% filter(code %in% c('centre','south')), aes(x = month, y = data, group = code, colour = code)) +
geom_line() +
geom_point(size=2, shape=21, fill="white") +
ylim(4,10) +
ggtitle('台灣北中南東離島月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
ggplot(df %>% filter(code %in% c('north','east','island')), aes(x = month, y = data, group = code, colour = code)) +
geom_line() +
geom_point(size=2, shape=21, fill="white") +
ylim(4,10) +
ggtitle('台灣北東離島月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
ggplot(df %>% filter(code %in% c('north','east','island')), aes(x = month, y = data, group = code, colour = code)) +
geom_line() +
geom_point(size=2, shape=21, fill="white") +
ylim(4,10) +
ggtitle('台灣北東離島月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
ggplot(df %>% filter(code %in% c('centre','south')), aes(x = month, y = data, group = code, colour = code)) +
geom_line() +
geom_point(size=2, shape=21, fill="white") +
ylim(4,10) +
ggtitle('台灣中南月平均雲量圖') +
theme(text = element_text(family= 'Arial Unicode MS'))
source('~/.active-rstudio-document')
library(mlr)
listLearners("classif")[c("class","package")]
data(iris)
View(iris)
task = makeClassifTask(id = "tutorial", data = iris, target = "Species")
lrn = makeLearner("classif.lda")
rdesc = makeResampleDesc(method = "CV", stratify = TRUE)
r = resample(learner = lrn, task = task, resampling = rdesc, show.info = FALSE)
r
r$aggr
sample(1:30,5)
sample(c('s',1,2),5)
sample(c('s',1,2,4,4,4,,5,6,2,TRUE),5)
sample(c('s',1,2,4,4,4,d,5,6,2,TRUE),5)
sample(c('s',1,2,4,4,4,'s',5,6,2,TRUE),5)
shiny::runApp('pecuR/shinyProject')
source('~/pecuR/shinyProject/source.R')
source('~/pecuR/shinyProject/source.R')
setwd('~/pecuR')
source('~/pecuR/shinyProject/source.R')
setwd('~/pecuR/shinyProect')
runApp('shinyProject')
source('~/pecuR/shinyProject/source.R')
source('~/pecuR/shinyProject/source.R')
source('~/pecuR/shinyProject/source.R')
source('~/pecuR/shinyProject/source.R')
runApp('shinyProject')
stores<- read.csv("taipei_store.csv",header = TRUE)
source('~/pecuR/shinyProject/source.R')
source('~/pecuR/shinyProject/source.R')
runApp('shinyProject')
source('~/pecuR/shinyProject/source.R')
source('~/pecuR/shinyProject/source.R')
source('~/pecuR/shinyProject/source.R')
runApp('shinyProject')
source('~/pecuR/shinyProject/source.R')
read.csv('taipei_store.csv',header = TRUE)
getwd()
setwd('~/pecuR/shinyProject')
source('~/pecuR/shinyProject/source.R')
plot(cars)
runApp()
runApp()
knitr::opts_chunk$set(echo = FALSE)
summary(cars)
plot(pressure)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
setwd("~/pecuR/shinyProject")
source('~/pecuR/shinyProject/readdata.R')
View(dt)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/pecuR/shinyProject/readdata.R')
setwd("~/pecuR/shinyProject")
source('~/pecuR/shinyProject/readdata.R')
View(dt_Ty)
data_Ty <- dt_Ty %>%
filter(disaster.event ==
'01_Wipha') %>%
select(disaster.event,days) %>%
arrange(days)
library(dplyr)
data_Ty <- dt_Ty %>%
filter(disaster.event ==
'01_Wipha') %>%
select(disaster.event,days) %>%
arrange(days)
View(data_Ty)
library(ggplot2)
ggplot(data_Ty, aex(x=days)) +
geom_histogram()
ggplot(data_Ty, aes(x=days)) +
geom_histogram()
ggplot(data_Ty, aes(x=days)) +
geom_histogram() + density()
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(y = ..density..))
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(y = ..density..)) + geom_density()
data_Ty <- dt_Ty %>%
filter(disaster.event ==
'08_Rammasun_Manila') %>%
select(disaster.event,days) %>%
arrange(days)
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(y = ..density..)) + geom_density()
ggplot(data_Ty, aes(x=days)) +
geom_histogram() + geom_density()
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(y = ..count..)) + geom_density()
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(fill = ..count..)) + geom_density()
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(density = ..count..)) + geom_density() + +
scale_fill_gradient("Count", low = "green", high = "red")
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(fill = ..count.., y = ..density..)) + geom_density()
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(fill = ..count.., y = ..density..)) + geom_density()+
+     scale_fill_gradient("Count", low = "green", high = "red")
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(fill = ..count.., y = ..density..)) + geom_density()
+     scale_fill_gradient("Count", low = "green", high = "red")
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(fill = ..count.., y = ..density..)) + geom_density()+scale_fill_gradient("Count", low = "green", high = "red")
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(fill = ..count.., y = ..count..)) + geom_count()+scale_fill_gradient("Count", low = "green", high = "red")
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(fill = ..count.., y = ..count..))
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(fill = ..count.., y = ..count..)) + geom_abline()
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(fill = ..count.., y = ..count..)) + geom_line()
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(fill = ..count.., y = ..count..)) + geom_line(y=..count..)
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(fill = ..count.., y = ..count..)) + geom_line(aes(y=..count..))
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(fill = ..count.., y = ..count..)) + geom_line(aes(y=count))
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(fill = ..count.., y = ..count..)) + geom_line()
ggplot(data_Ty, aes(x=days)) +
geom_histogram(aes(fill = ..count.., y = ..count..)) + geom_line(aes(y=..density..))
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
source('~/pecuR/shinyProject/readdata.R')
data_Ty <- dt_Ty %>%
filter(disaster.event == '
08_Rammasun_Manila') %>%
arrange(days) %>%
group_by(days) %>%
mutate(day_count = n()) %>%
ungroup() %>%
select(disaster.event,days,day_count) %>%
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/pecuR/shinyProject/readdata.R')
View(dt_Ty)
runApp()
median()
runApp()
median()
median(lon)
median(lon=())
median(lon=c())
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
